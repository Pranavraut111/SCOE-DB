# SCOE-DB Database Schema Documentation

## Tables Overview

### Core Tables
1. **students** - Core student information with authentication
2. **subjects** - Subject master for academic years
3. **subject_components** - Component-wise marks configuration (IA1, IA2, Oral, ESE)

### Examination Tables
4. **exam_events** - Exam sessions and metadata
5. **exam_schedules** - Individual exam schedules
6. **student_enrollment_applications** - Student exam enrollment applications
7. **student_exam_enrollments** - Approved student enrollments
8. **student_exams** - Legacy exam attempts (parallel system)

### Component-Based Results System (Mumbai University Style)
9. **student_exam_component_marks** - Component-wise marks (IA1, IA2, Oral, ESE)
10. **subject_final_results** - Aggregated subject results with grades
11. **semester_results** - Semester SGPA/CGPA and result class

### Supporting Tables
12. **student_progression_history** - Student academic progression
13. **exam_results** - Legacy consolidated results (parallel system)

## Detailed Schema

### students
- id (PK)
- first_name, middle_name, last_name
- email, phone, date_of_birth
- gender, address, state, country, postal_code
- admission_number, roll_number, institutional_email
- department, category, mother_name
- current_semester, admission_year
- password_hash (bcrypt hashed password for authentication)
- academic_status (ACTIVE/GRADUATED/SUSPENDED/WITHDRAWN)
- created_at, updated_at

### exam_events
- id (PK)
- name, description, exam_type, status
- department, semester, academic_year
- start_date, end_date
- created_by, created_at, updated_at
- instructions, passing_marks_percentage

### exam_schedules
- id (PK)
- exam_event_id (FK), subject_id (FK)
- exam_date, start_time, end_time, duration_minutes
- venue, max_students, supervisor
- total_marks, theory_marks, practical_marks
- special_instructions, materials_allowed
- is_active, created_at, updated_at

### student_exam_enrollments
- id (PK)
- exam_event_id (FK), student_id (FK)
- enrollment_status, enrollment_date
- is_backlog_student, exempted_subjects
- special_requirements, enrolled_by, notes

### student_exams
- id (PK)
- exam_schedule_id (FK), student_id (FK)
- attendance_status, seat_number
- theory_marks_obtained, practical_marks_obtained
- total_marks_obtained, grade, is_pass
- start_time_actual, end_time_actual
- extra_time_given, malpractice_reported
- answer_sheet_number, answer_sheet_received
- marks_entered_by, marks_entered_at
- verified_by, verified_at
- created_at, updated_at

### exam_results
- id (PK)
- exam_event_id (FK), student_id (FK)
- total_subjects, subjects_appeared
- subjects_passed, subjects_failed
- total_marks_possible, total_marks_obtained
- percentage, overall_grade
- is_promoted, has_backlogs, backlog_subjects
- result_declared, result_declared_at
- result_declared_by, remarks
- calculated_at, updated_at

### subject_catalog
- id (PK)
- department, semester
- subject_code, subject_name
- default_credits

### subjects
- id (PK)
- year, scheme, department, semester
- subject_code, subject_name, credits
- overall_passing_criteria

### subject_components
- id (PK)
- subject_id (FK)
- component_type (IA1/IA2/ORAL/ESE)
- is_enabled (boolean)
- out_of_marks (maximum marks for component)
- passing_marks (minimum marks to pass)
- resolution (marks increment, e.g., 0.5 or 1)

### student_enrollment_applications
- id (PK)
- student_id (FK)
- exam_event_id (FK)
- application_date (datetime)
- status (pending/approved/rejected)
- selected_subjects (JSON array)
- is_backlog_student (boolean)
- special_requirements (text)
- rejection_reason (text, nullable)
- reviewed_by (string, nullable)
- reviewed_at (datetime, nullable)
- created_at, updated_at

### student_exam_component_marks
- id (PK)
- student_id (FK)
- subject_id (FK)
- component_type (IA1/IA2/ORAL/ESE)
- academic_year (string)
- semester (integer)
- marks_obtained (float)
- out_of_marks (float)
- is_absent (boolean)
- exam_date (date, nullable)
- entered_by (string)
- entered_at (datetime)
- verified_by (string, nullable)
- verified_at (datetime, nullable)
- remarks (text, nullable)
- created_at, updated_at

### subject_final_results
- id (PK)
- student_id (FK)
- subject_id (FK)
- academic_year (string)
- semester (integer)
- ia1_marks, ia2_marks, oral_marks, ese_marks (float, nullable)
- total_marks_obtained (float)
- total_marks_possible (float)
- percentage (float)
- grade (A+/A/B+/B/C/P/F)
- grade_points (float, 0-10 scale)
- credits (integer)
- is_pass (boolean)
- is_backlog (boolean)
- attempt_number (integer, default 1)
- result_date (date)
- calculated_at (datetime)
- remarks (text, nullable)
- created_at, updated_at

### semester_results
- id (PK)
- student_id (FK)
- academic_year (string)
- semester (integer)
- total_subjects (integer)
- subjects_passed (integer)
- subjects_failed (integer)
- total_credits_registered (integer)
- total_credits_earned (integer)
- sgpa (float, 0-10 scale)
- cgpa (float, 0-10 scale)
- percentage (float)
- result_status (PASS/ATKT/FAIL)
- result_class (First Class with Distinction/First Class/Second Class/Pass Class/Fail)
- has_backlogs (boolean)
- backlog_subjects (JSON array)
- calculated_at (datetime)
- remarks (text, nullable)
- created_at, updated_at

### student_progression_history
- id (PK)
- student_id (FK)
- from_semester (integer)
- to_semester (integer)
- academic_year (string)
- promotion_date (date)
- exam_event_id (FK, nullable)
- status (PROMOTED/DETAINED/REPEAT)
- remarks (text, nullable)
- created_at

## Relationships

### Core Relationships
1. students ↔ student_enrollment_applications (1:N)
2. students ↔ student_exam_enrollments (1:N)
3. students ↔ student_exam_component_marks (1:N)
4. students ↔ subject_final_results (1:N)
5. students ↔ semester_results (1:N)
6. students ↔ student_progression_history (1:N)

### Exam Relationships
7. exam_events ↔ exam_schedules (1:N)
8. exam_events ↔ student_enrollment_applications (1:N)
9. exam_events ↔ student_exam_enrollments (1:N)
10. exam_schedules ↔ student_exams (1:N)

### Subject Relationships
11. subjects ↔ subject_components (1:N)
12. subjects ↔ student_exam_component_marks (1:N)
13. subjects ↔ subject_final_results (1:N)

### Result Calculation Flow
```
student_exam_component_marks (IA1, IA2, Oral, ESE)
           ↓
    subject_final_results (Grade, SGPA calculation)
           ↓
    semester_results (SGPA, CGPA, Result Class)
```

## Setup

To initialize the database:

1. **Create Database**
   ```bash
   mysql -u root -p
   CREATE DATABASE student_management;
   exit
   ```

2. **Configure Environment**
   ```bash
   cd backend
   cp .env.example .env
   # Edit .env with your database credentials
   ```

3. **Run Migrations**
   ```bash
   # Initialize base schema
   python init_db.py
   
   # Add authentication (password_hash field)
   python migrate_add_password.py
   
   # Add enrollment applications system
   python migrate_add_enrollment_applications.py
   
   # Add component-based results system
   python migrate_add_result_system.py
   
   # Add student progression tracking
   python migrate_add_student_progression.py
   ```

4. **Initialize Subject Data**
   ```bash
   python init_subject_db.py
   ```

## Authentication

### Student Authentication
- Students login with institutional email and password
- Default password: `Student@123`
- Passwords are bcrypt hashed
- Students can change password after login
- Endpoints: `/api/v1/students/auth/login`, `/api/v1/students/auth/change-password`

### Admin Authentication
- Admin credentials stored in `.env` file
- Default: Email: `Praut1086@gmail.com`, Password: `admin123`
- Passwords are bcrypt hashed
- Endpoint: `/api/v1/admin/auth/login`

## Grading System (Mumbai University)

| Grade | Grade Points | Marks Range |
|-------|-------------|-------------|
| A+    | 10          | 80-100      |
| A     | 9           | 70-79       |
| B+    | 8           | 60-69       |
| B     | 7           | 55-59       |
| C     | 6           | 50-54       |
| P     | 5           | 45-49       |
| F     | 0           | 0-44        |

**SGPA Calculation:** Σ(credits × grade_points) / Σ(credits)

**Result Classes:**
- First Class with Distinction: SGPA ≥ 7.5
- First Class: SGPA ≥ 6.0
- Second Class: SGPA ≥ 5.0
- Pass Class: SGPA ≥ 4.0
- Fail: SGPA < 4.0

